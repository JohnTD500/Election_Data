{"name":"Federal Election Commission Data","tagline":"personal project using FEC data and the Lobbying Disclusure database","body":"# FEC Data\r\nPhillip Hetzel  \r\nApril 23, 2015  \r\n##Objective\r\nI've always been fascinated (and frustrated) with the state of campaign finance in the United States of America.  It's because of this fascination that I've turned my attention to the Federal Election Commissions Open Government policy to view the \"trackable\" donations that candidates are receiving.  I say trackable donations because a great deal of money does not have to be disclosed in an easy to track fashion.\r\n\r\nThe general purpose of this project is to answer two questions:\r\n\r\n* Which companies give the most money over time?\r\n\r\n* Which political direction companies are likely to donate?\r\n\r\n* Which candidates are receiving the most money over time?\r\n\r\n\r\n##The Data\r\n\r\nHere are some descriptions of the tables we will download.  They are set up to be relational.\r\n\r\n\r\n|Name                        |Description                                                                                                                                                                                                                                                                                                                                                          |Data.frame |\r\n|:---------------------------|:--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|:----------|\r\n|Commitees                   |The committee master file contains one record for each committee registered with the Federal Election Commission. This includes federal political action committees and party committees, campaign committees for presidential, house and senate candidates, as well as groups or organizations who are spending money for or against candidates for federal office. |committee  |\r\n|Candidates                  |The candidate master file contains one record for each candidate who has either registered with the Federal Election Commission or appeared on a ballot list prepared by a state elections office.                                                                                                                                                                   |candidates |\r\n|Linkages                    |This file contains one record for each candidate to committee linakge.                                                                                                                                                                                                                                                                                               |linkage    |\r\n|Itemized Records            |The itemized records (miscellaneous transactions) file contains all transactions (contributions, transfers, etc. among federal committees).                                                                                                                                                                                                                          |cm2cm      |\r\n|Contributions to Candidates |The itemized committee contributions file contains each contribution or independent expenditure made by a PAC, party committee, candidate committee, or other federal committee to a candidate during the two-year election cycle.                                                                                                                                   |cm2cand    |\r\n|Individual Contributions    |The individual contributions file contains each contribution from an individual to a federal committee if the contribution was at least $200.                                                                                                                                                                                                                        |indiv2cm   |\r\n\r\n##Let's Get Coding\r\n\r\n###Set Up\r\n\r\nI want to set myself up for success, so I immediately load up some of my favorite packages for data munging.  I also set my working directory and clear my memory.\r\n\r\n\r\n```r\r\nlibrary(dplyr)\r\nlibrary(ggplot2)\r\nlibrary(reshape2)\r\nsetwd(\"~/R Working Directory/Election_Data\")\r\nrm(list=ls())\r\n```\r\n\r\nIn order to find out the answers to these questions, we can download the data from the [Federal Election Commission](http://www.fec.gov/finance/disclosure/ftpdet.shtml#a2015_2016).  I want to write as little code as possible, so I store the specific links to loop through later.  I am downloading two files for each FEC table: a header file (in .csv format) and the actual data (in a zip file).\r\n\r\n\r\n```r\r\n#Create a vector with the links leading to CSV files that hold the column names\r\nnameLinks <- c(\"http://www.fec.gov/finance/disclosure/metadata/cn_header_file.csv\", \r\n              \"http://www.fec.gov/finance/disclosure/metadata/indiv_header_file.csv\", \r\n              \"http://www.fec.gov/finance/disclosure/metadata/pas2_header_file.csv\", \r\n              \"http://www.fec.gov/finance/disclosure/metadata/cm_header_file.csv\", \r\n              \"http://www.fec.gov/finance/disclosure/metadata/ccl_header_file.csv\",\r\n              \"http://www.fec.gov/finance/disclosure/metadata/oth_header_file.csv\")\r\n\r\n#Create a vector with the links leading to the 6 data frames\r\ndatLinks <- c(\"ftp://ftp.fec.gov/FEC/2016/cn16.zip\",\r\n              \"ftp://ftp.fec.gov/FEC/2016/indiv16.zip\",\r\n              \"ftp://ftp.fec.gov/FEC/2016/pas216.zip\",\r\n              \"ftp://ftp.fec.gov/FEC/2016/cm16.zip\",\r\n              \"ftp://ftp.fec.gov/FEC/2016/ccl16.zip\",\r\n              \"ftp://ftp.fec.gov/FEC/2016/oth16.zip\")\r\n\r\n#Create a vector with the file names of each of the tables\r\nfileName <- c('cn.txt',\r\n              'itcont.txt',\r\n              'itpas2.txt',\r\n              'cm.txt',\r\n              'ccl.txt',\r\n              'itoth.txt')\r\n```\r\n\r\nFEC's site gives the columns and associated data types, so I create vectors with the those types to pass into the loop.  This will ensure that nothing gets misread.  I also create a list of 6 empty data frames to import the data into.\r\n\r\n\r\n```r\r\n#Create vectors describing the class of each column in each table\r\ncandClasses <- rep('character', 15)\r\nindColClasses <- c(rep(\"character\", 14), \"numeric\", rep(\"character\",6))\r\ncomContrClasses <- c(rep('character', 14), 'numeric', rep('character', 7))\r\ncomClasses <- rep('character', 15)\r\nlinkageClasses <- rep('character', 7)\r\ncm2cmClasses <- c(rep('character', 14), 'numeric', rep('character', 6))\r\n\r\n#Place these vectors in a list in preparation for a loop\r\niterClasses <- list(candClasses, indColClasses, comContrClasses, comClasses, linkageClasses, cm2cmClasses)\r\n\r\n#Create a list of 6 blank data frames in preparation for a loop\r\nframes <- list(rep(data.frame(),6))\r\n```\r\n\r\n\r\n###Getting the Data\r\n\r\nNow it's time for the loop.  The basic structure of the loop is as follows\r\n\r\n1. Initialize a temporary file\r\n2. Download the header file from the nameLinks vector and place into the first temp file\r\n3. Initialize a second temp file\r\n4. Download the data table referenced by the fileName vector and use the iterClasses vector to define column types.  Unzip and place the table into the list of data frames\r\n5. Define the names of the new data frame as the data in the tempNames file\r\n6. Detach the temp files\r\n\r\n\r\n```r\r\nfor (i in 1:length(nameLinks)){\r\n    tempNames <- tempfile()\r\n    download.file(nameLinks[i], tempNames, method = \"curl\")\r\n    temp <- tempfile()\r\n    download.file(datLinks[i], temp, method = \"curl\")\r\n    frames[[i]] <- read.table(unz(temp,fileName[i]),header = F, sep = \"|\",comment.char = \"\",stringsAsFactors = F,\r\n                       colClasses = unlist(iterClasses[i]), quote = \"\")\r\n    \r\n    names(frames[[i]]) <- read.csv(tempNames,header = F, stringsAsFactor = F)\r\n    unlink(temp)\r\n    unlink(tempNames)\r\n    remove(temp,tempNames)\r\n}\r\n```\r\n\r\nBy the time this is over, you should have a list with 6 full data frames.  The next step is to extract the dataframes into variables we can remember.  After the data frames have been moved into separate variables, we can clean up our memory.\r\n\r\n\r\n```r\r\n#Place the items in the frames list into specific variables\r\n#Delete the list items as they are used to save memory\r\ncandidates <- as.data.frame(frames[[1]])\r\nframes[[1]] <- NULL\r\nindiv2cm <- as.data.frame(frames[[1]])\r\nframes[[1]] <- NULL\r\ncm2cand <- as.data.frame(frames[[1]])\r\nframes[[1]] <- NULL\r\ncommittee <- as.data.frame(frames[[1]])\r\nframes[[1]] <- NULL\r\nlinkage <- as.data.frame(frames[[1]])\r\nframes[[1]] <- NULL\r\ncm2cm <- as.data.frame(frames[[1]])\r\n\r\n#Remove variables not being used\r\nremove(frames, candClasses, cm2cmClasses, comClasses, comContrClasses, datLinks, fileName, \r\n       i, indColClasses, iterClasses, linkageClasses, nameLinks)\r\n```\r\n\r\n###Transforming the Data\r\n\r\nSince we'll be doing some time series analysis, we can convert any data fields into the proper format.\r\n\r\n\r\n```r\r\n#Change to date type where applicable\r\nindiv2cm$TRANSACTION_DT <- as.Date(indiv2cm$TRANSACTION_DT,format = \"%m%d%Y\")\r\ncm2cand$TRANSACTION_DT <- as.Date(cm2cand$TRANSACTION_DT, format = '%m%d%Y')\r\ncm2cm$TRANSACTION_DT <- as.Date(cm2cm$TRANSACTION_DT, format = '%m%d%Y')\r\n```\r\n\r\nThis is where it gets a little tricky.  My first goal is to see how much money a PAC has spent or received on any given day.  That means I need to have a row for every day per every PAC.  The code below makes a new data frame (cmSmall), which is the committee data frame with less variables.  We then create a vector, days, which will have a day for every day so far this year.  We then create a data frame with every day this year, for every PAC.  We can then join the cmSmall data frame to add in relevent variables\r\n\r\n\r\n```r\r\ncmSmall <- select(committee, CMTE_ID, CMTE_NM, CMTE_PTY_AFFILIATION,ORG_TP)\r\n\r\ndays <- seq(as.Date('2015-01-01'), as.Date(Sys.Date()), 'day')\r\ncmGrpMoney <- arrange(expand.grid(CMTE_ID = cmSmall$CMTE_ID, OnDate = days), CMTE_ID)\r\n\r\ncmGrpMoney <- cmGrpMoney %>%\r\n    left_join(cmSmall, by = ('CMTE_ID' = 'CMTE_ID'))\r\n```\r\n\r\nIn our data, there are cases where PACs are receiving (or spending) money through multiple transactions a day.  We need to aggregate that data by PAC by day:\r\n\r\n\r\n```r\r\n#Shows money spent from individuals on PACs\r\nindivAssets <- indiv2cm %>%\r\n    group_by(CMTE_ID, TRANSACTION_DT) %>%\r\n    arrange(TRANSACTION_DT) %>%\r\n    summarise(IndSum = sum(TRANSACTION_AMT))\r\n\r\n#Shows how much a committee has spent on other committees\r\ncm2cmLiabilities <- cm2cm %>%\r\n    group_by(CMTE_ID, TRANSACTION_DT) %>%\r\n    arrange(TRANSACTION_DT) %>%\r\n    summarise(Liabilities = sum(TRANSACTION_AMT)) %>%\r\n    select(CMTE_ID,TRANSACTION_DT, Liabilities)\r\n\r\n#Shows how much a commmittee has received from other committees\r\ncm2cmAssets <- cm2cm %>%\r\n    group_by(OTHER_ID, TRANSACTION_DT) %>%\r\n    arrange(TRANSACTION_DT) %>%\r\n    summarise(Assets = sum(TRANSACTION_AMT)) %>%\r\n    select(OTHER_ID,TRANSACTION_DT, Assets)\r\n\r\n#Shows how much a committee has spent on candidates\r\ncm2candLiabilities <- cm2cand %>%\r\n    group_by(CMTE_ID, TRANSACTION_DT) %>%\r\n    arrange(TRANSACTION_DT) %>%\r\n    summarise(ToCand= sum(TRANSACTION_AMT)) %>%\r\n    select(CMTE_ID,TRANSACTION_DT, ToCand)\r\n\r\n#Shows how much a candidate committee has received from other committees (should be 0)\r\ncm2candAssets <- cm2cand %>%\r\n    group_by(OTHER_ID, TRANSACTION_DT) %>%\r\n    arrange(TRANSACTION_DT) %>%\r\n    summarise(CandReceived = sum(TRANSACTION_AMT)) %>%\r\n    select(OTHER_ID,TRANSACTION_DT, CandReceived)\r\n```\r\n\r\n\r\n###Bringing It All Together\r\n\r\nIt's time to combine all of these assets and liabilities into one table.  Hadley Wickham's dplyr (also used above) makes this process simple.  We also want to make all NA values zero (that came as a result of the left join).\r\n\r\n\r\n```r\r\n#Join the Asset and Liability data frames to the master group\r\ncmGrpMoney <- cmGrpMoney %>%\r\n    left_join(indivAssets, by = c('CMTE_ID' = 'CMTE_ID', 'OnDate' = 'TRANSACTION_DT')) %>%\r\n    left_join(cm2cmAssets, by = c('CMTE_ID' = 'OTHER_ID', 'OnDate' = 'TRANSACTION_DT')) %>%\r\n    left_join(cm2cmLiabilities, by = c('CMTE_ID' = 'CMTE_ID', 'OnDate' = 'TRANSACTION_DT')) %>%\r\n    left_join(cm2candLiabilities, by = c('CMTE_ID' = 'CMTE_ID', 'OnDate' = 'TRANSACTION_DT')) %>%\r\n    left_join(cm2candAssets, by = c('CMTE_ID' = 'OTHER_ID', 'OnDate' = 'TRANSACTION_DT'))\r\n\r\n\r\n#Replace NAs induced by the join to 0\r\ncmGrpMoney[is.na(cmGrpMoney)] <- 0\r\n```\r\n\r\nWe want to view total assets and total liabilities over time.  This is why were are using the cumulative sum function, then adding together the asset columns and liability columns, separately.\r\n\r\n\r\n```r\r\ncmGrpMoney <- cmGrpMoney %>%\r\n    group_by(CMTE_ID) %>%\r\n    mutate(FromCommittees = cumsum(Assets), ReceivedCandidates = cumsum(CandReceived),\r\n           Funds = cumsum(IndSum), SpentCommittees = cumsum(Liabilities), SpentCandidates = cumsum(ToCand), \r\n           TotalRaised = FromCommittees+Funds+ReceivedCandidates, TotalSpent = SpentCommittees+SpentCandidates) %>%\r\n    select(CMTE_ID, CMTE_NM, OnDate, Funds, FromCommittees, TotalRaised, SpentCommittees, SpentCandidates, TotalSpent)\r\n```\r\n\r\nWe have a massive dataset right now but how much of it is useful?  In the beginning of the exercise, we made a data frame using all of the listed PACs.  Most of these PACs have not given nor received money yet this year, so we want to filter them out.\r\n\r\n\r\n```r\r\ncheck <- cmGrpMoney %>%\r\n    group_by(CMTE_ID) %>%\r\n    summarise(raised = sum(TotalRaised), spent = sum(TotalSpent)) %>%\r\n    filter(raised == 0 & spent == 0) %>%\r\n    select(CMTE_ID)\r\n\r\ncheck <- check$CMTE_ID\r\n\r\ncmGrpMoney <- cmGrpMoney[(!cmGrpMoney$CMTE_ID %in% check),]\r\n```\r\n\r\n##Product\r\n\r\nThe goal of this work was simply to get the data into the correct format for analysis.  We can plug this new data output into a Shiny application to more dynamically view Assets and Liabilities of PACs over time.  Please go to my [Shiny Application](https://phetzel1.shinyapps.io/Election_Data/) and play around.  Start typing in a company name and see how active their PAC is!\r\n\r\n##Shiny Code\r\n\r\n\r\n```r\r\nlibrary(shiny)\r\nrequire(rCharts)\r\n\r\n#ui.R\r\nshinyUI(fluidPage(\r\n    titlePanel('PAC Fundraising vs. Spending'),\r\n    sidebarPanel(\r\n        selectizeInput('committee', choices = NULL, label = 'Search for a Committee')\r\n    ),\r\n    mainPanel(\r\n        showOutput(\"raised\", 'morris')\r\n        )\r\n    )\r\n)\r\n\r\n#server.R\r\nlibrary(shiny)\r\nlibrary(rCharts)\r\nlibrary(data.table)\r\n\r\ncmGrpMoney <- fread(\"cmGrpMoney.txt\", sep = '|')\r\nsetnames(cmGrpMoney, c('CMTE_ID', 'CMTE_NM', 'OnDate', 'Funds', 'FromCommittees', 'TotalRaised', 'SpentCommittees', 'SpentCandidates', 'TotalSpent'))\r\norgs <- fread('orgs.txt', sep = '\\n', header = F)$V1\r\n\r\nshinyServer(function(input, output, session){\r\n    \r\n    updateSelectizeInput(session, 'committee', choices = orgs, server = T, options = list(placeholder = 'Start typing!'))\r\n    \r\n    output$raised <- renderChart({\r\n        dat <- cmGrpMoney[cmGrpMoney$CMTE_NM == input$committee,]\r\n        p1 <- mPlot(x = 'OnDate', y = list('TotalRaised', 'TotalSpent'), data = dat, type = 'Line', \r\n                    labels = c('Total Raised', 'Total Spent'), \r\n                    pointSize = 0, lineSize = 1)\r\n\r\n        p1$set(dom = 'raised', lineColors = c('green', 'red'))\r\n        return(p1)})\r\n\r\n\r\n})\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}